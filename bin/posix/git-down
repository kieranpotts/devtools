#!/bin/sh

# ==============================================================================
# Git alias for `git pull`, with the rebasing strategy enabled.
#
# Usage:
#
# ```
# git down ([params...])
# ```
#
# Additional parameters are forwarded to the `git pull` operation. Use with
# `--interactive|-i` to edit the local commit history. Any WIP is stashed and
# will be returned to the working tree after the `pull` operation.
#
# See also the `git up` alias, which mirrors this, and `git sync`, which
# combines the two into a single operation.
# ==============================================================================

initialStashCount=$(git rev-list --walk-reflogs --count refs/stash 2> /dev/null)
git stash push --include-untracked

# Bash-compatible code, with string indexing that allows additional parameters
# to be passed on to the `git pull` command.
#git pull --rebase --prune ${@:1}

# POSIX-compatible code, without string indexing. This code only passes the
# first parameter to the `git pull` command.
git pull --rebase --prune "${1}"

newStashCount=$(git rev-list --walk-reflogs --count refs/stash 2> /dev/null)
if [ "${newStashCount:-0}" != "${initialStashCount:-0}" ]; then
  git stash pop
fi
